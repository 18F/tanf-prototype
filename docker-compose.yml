version: '3'

services:
  db:
    image: "postgres"
    container_name: "postgres"
    environment:
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=XXX
      - POSTGRES_DB=mydb
    ports:
      - "54320:5432"
  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
    ports:
      - "9000:9000"      
  miniobucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb myminio/data;
      exit 0;
      "
  tanf:
    build: .
    image: tanf:testing
    depends_on:
      - db
      - miniobucket
    environment: &pythonenv
      JWT_KEY: "XXXNOTAKEYXXX"
      NOLOGINGOV: "true"
      DEBUG: "true"
      OIDC_RP_CLIENT_ID: "urn:gov:gsa:openidconnect.profiles:sp:sso:xxx:xxx"
      SECRET_KEY: "XXXNOTAKEYXXX"
      POSTGRES_USER: "pguser"
      POSTGRES_PASSWORD: "XXX"
      POSTGRES_DB: "mydb"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres"
      AWS_ACCESS_KEY_ID: "${MINIO_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${MINIO_SECRET_KEY}"
      AWS_S3_REGION_NAME: "us-east-1"
      BUCKETNAME: "data"
      AWS_S3_ENDPOINT_URL: "http://minio:9000"
    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
  backgroundprocessing:
    image: tanf:testing
    depends_on:
      - db
      - miniobucket
    environment:
      <<: *pythonenv
    command: python3 manage.py process_tasks
    restart: on-failure
  # zaproxy:
  #   image: owasp/zap2docker-weekly
  #   command: sleep 3600
